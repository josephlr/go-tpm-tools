// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.16.0
// source: proto/tpm.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum values come from TCG Algorithm Registry - v1.27 - Table 3
type ObjectType int32

const (
	ObjectType_OBJECT_INVALID ObjectType = 0
	ObjectType_RSA            ObjectType = 1
	ObjectType_ECC            ObjectType = 35
)

// Enum value maps for ObjectType.
var (
	ObjectType_name = map[int32]string{
		0:  "OBJECT_INVALID",
		1:  "RSA",
		35: "ECC",
	}
	ObjectType_value = map[string]int32{
		"OBJECT_INVALID": 0,
		"RSA":            1,
		"ECC":            35,
	}
)

func (x ObjectType) Enum() *ObjectType {
	p := new(ObjectType)
	*p = x
	return p
}

func (x ObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tpm_proto_enumTypes[0].Descriptor()
}

func (ObjectType) Type() protoreflect.EnumType {
	return &file_proto_tpm_proto_enumTypes[0]
}

func (x ObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectType.Descriptor instead.
func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{0}
}

type HashAlgo int32

const (
	HashAlgo_HASH_INVALID HashAlgo = 0
	HashAlgo_SHA1         HashAlgo = 4
	HashAlgo_SHA256       HashAlgo = 11
)

// Enum value maps for HashAlgo.
var (
	HashAlgo_name = map[int32]string{
		0:  "HASH_INVALID",
		4:  "SHA1",
		11: "SHA256",
	}
	HashAlgo_value = map[string]int32{
		"HASH_INVALID": 0,
		"SHA1":         4,
		"SHA256":       11,
	}
)

func (x HashAlgo) Enum() *HashAlgo {
	p := new(HashAlgo)
	*p = x
	return p
}

func (x HashAlgo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashAlgo) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tpm_proto_enumTypes[1].Descriptor()
}

func (HashAlgo) Type() protoreflect.EnumType {
	return &file_proto_tpm_proto_enumTypes[1]
}

func (x HashAlgo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashAlgo.Descriptor instead.
func (HashAlgo) EnumDescriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{1}
}

type GceConfidentialTechnology int32

const (
	GceConfidentialTechnology_NONE       GceConfidentialTechnology = 0
	GceConfidentialTechnology_AMD_SEV    GceConfidentialTechnology = 1
	GceConfidentialTechnology_AMD_SEV_ES GceConfidentialTechnology = 2
)

// Enum value maps for GceConfidentialTechnology.
var (
	GceConfidentialTechnology_name = map[int32]string{
		0: "NONE",
		1: "AMD_SEV",
		2: "AMD_SEV_ES",
	}
	GceConfidentialTechnology_value = map[string]int32{
		"NONE":       0,
		"AMD_SEV":    1,
		"AMD_SEV_ES": 2,
	}
)

func (x GceConfidentialTechnology) Enum() *GceConfidentialTechnology {
	p := new(GceConfidentialTechnology)
	*p = x
	return p
}

func (x GceConfidentialTechnology) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GceConfidentialTechnology) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tpm_proto_enumTypes[2].Descriptor()
}

func (GceConfidentialTechnology) Type() protoreflect.EnumType {
	return &file_proto_tpm_proto_enumTypes[2]
}

func (x GceConfidentialTechnology) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GceConfidentialTechnology.Descriptor instead.
func (GceConfidentialTechnology) EnumDescriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{2}
}

// SealedBytes stores the result of a TPM2_Seal. The private portion (priv) has
// already been encrypted and is no longer sensitive. The hash algorithm is
// assumed to be SHA256.
type SealedBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priv          []byte     `protobuf:"bytes,1,opt,name=priv,proto3" json:"priv,omitempty"`
	Pub           []byte     `protobuf:"bytes,2,opt,name=pub,proto3" json:"pub,omitempty"`
	Pcrs          []int32    `protobuf:"varint,3,rep,packed,name=pcrs,proto3" json:"pcrs,omitempty"`
	Hash          HashAlgo   `protobuf:"varint,4,opt,name=hash,proto3,enum=HashAlgo" json:"hash,omitempty"`
	Srk           ObjectType `protobuf:"varint,5,opt,name=srk,proto3,enum=ObjectType" json:"srk,omitempty"`
	CertifiedPcrs *Pcrs      `protobuf:"bytes,6,opt,name=certified_pcrs,json=certifiedPcrs,proto3" json:"certified_pcrs,omitempty"`
	CreationData  []byte     `protobuf:"bytes,7,opt,name=creation_data,json=creationData,proto3" json:"creation_data,omitempty"`
	Ticket        []byte     `protobuf:"bytes,8,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *SealedBytes) Reset() {
	*x = SealedBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SealedBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealedBytes) ProtoMessage() {}

func (x *SealedBytes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealedBytes.ProtoReflect.Descriptor instead.
func (*SealedBytes) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{0}
}

func (x *SealedBytes) GetPriv() []byte {
	if x != nil {
		return x.Priv
	}
	return nil
}

func (x *SealedBytes) GetPub() []byte {
	if x != nil {
		return x.Pub
	}
	return nil
}

func (x *SealedBytes) GetPcrs() []int32 {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (x *SealedBytes) GetHash() HashAlgo {
	if x != nil {
		return x.Hash
	}
	return HashAlgo_HASH_INVALID
}

func (x *SealedBytes) GetSrk() ObjectType {
	if x != nil {
		return x.Srk
	}
	return ObjectType_OBJECT_INVALID
}

func (x *SealedBytes) GetCertifiedPcrs() *Pcrs {
	if x != nil {
		return x.CertifiedPcrs
	}
	return nil
}

func (x *SealedBytes) GetCreationData() []byte {
	if x != nil {
		return x.CreationData
	}
	return nil
}

func (x *SealedBytes) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type ImportBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duplicate     []byte `protobuf:"bytes,1,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	EncryptedSeed []byte `protobuf:"bytes,2,opt,name=encrypted_seed,json=encryptedSeed,proto3" json:"encrypted_seed,omitempty"`
	PublicArea    []byte `protobuf:"bytes,3,opt,name=public_area,json=publicArea,proto3" json:"public_area,omitempty"`
	Pcrs          *Pcrs  `protobuf:"bytes,4,opt,name=pcrs,proto3" json:"pcrs,omitempty"`
}

func (x *ImportBlob) Reset() {
	*x = ImportBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBlob) ProtoMessage() {}

func (x *ImportBlob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBlob.ProtoReflect.Descriptor instead.
func (*ImportBlob) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{1}
}

func (x *ImportBlob) GetDuplicate() []byte {
	if x != nil {
		return x.Duplicate
	}
	return nil
}

func (x *ImportBlob) GetEncryptedSeed() []byte {
	if x != nil {
		return x.EncryptedSeed
	}
	return nil
}

func (x *ImportBlob) GetPublicArea() []byte {
	if x != nil {
		return x.PublicArea
	}
	return nil
}

func (x *ImportBlob) GetPcrs() *Pcrs {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TPM2 quote, encoded as a TPMS_ATTEST
	Quote []byte `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	// TPM2 signature, encoded as a TPMT_SIGNATURE
	RawSig []byte `protobuf:"bytes,2,opt,name=raw_sig,json=rawSig,proto3" json:"raw_sig,omitempty"`
	// PCR values of the bank being quoted
	Pcrs *Pcrs `protobuf:"bytes,3,opt,name=pcrs,proto3" json:"pcrs,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{2}
}

func (x *Quote) GetQuote() []byte {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *Quote) GetRawSig() []byte {
	if x != nil {
		return x.RawSig
	}
	return nil
}

func (x *Quote) GetPcrs() *Pcrs {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

type Pcrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash HashAlgo          `protobuf:"varint,1,opt,name=hash,proto3,enum=HashAlgo" json:"hash,omitempty"`
	Pcrs map[uint32][]byte `protobuf:"bytes,2,rep,name=pcrs,proto3" json:"pcrs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pcrs) Reset() {
	*x = Pcrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pcrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pcrs) ProtoMessage() {}

func (x *Pcrs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pcrs.ProtoReflect.Descriptor instead.
func (*Pcrs) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{3}
}

func (x *Pcrs) GetHash() HashAlgo {
	if x != nil {
		return x.Hash
	}
	return HashAlgo_HASH_INVALID
}

func (x *Pcrs) GetPcrs() map[uint32][]byte {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

// Information uniquely identifying a GCE instance. Can be used to create an
// instance URL, which can then be used with GCE APIs. Formatted like:
//   https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/instances/{instance_name}
type GceInstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zone          string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	ProjectId     string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectNumber uint64 `protobuf:"varint,3,opt,name=project_number,json=projectNumber,proto3" json:"project_number,omitempty"`
	InstanceName  string `protobuf:"bytes,4,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	InstanceId    uint64 `protobuf:"varint,5,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *GceInstanceInfo) Reset() {
	*x = GceInstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GceInstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GceInstanceInfo) ProtoMessage() {}

func (x *GceInstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GceInstanceInfo.ProtoReflect.Descriptor instead.
func (*GceInstanceInfo) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{4}
}

func (x *GceInstanceInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *GceInstanceInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GceInstanceInfo) GetProjectNumber() uint64 {
	if x != nil {
		return x.ProjectNumber
	}
	return 0
}

func (x *GceInstanceInfo) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *GceInstanceInfo) GetInstanceId() uint64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type Attestation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Attestation Key (AK) Public Area, encoded as a TPMT_PUBLIC
	AkPub []byte `protobuf:"bytes,1,opt,name=ak_pub,json=akPub,proto3" json:"ak_pub,omitempty"`
	// Quotes over all supported PCR banks
	Quotes []*Quote `protobuf:"bytes,2,rep,name=quotes,proto3" json:"quotes,omitempty"`
	// TCG Event Log, encoded in the raw binary format
	EventLog []byte `protobuf:"bytes,3,opt,name=event_log,json=eventLog,proto3" json:"event_log,omitempty"`
	// Optional information about a GCE instance, unused outside of GCE
	InstanceInfo *GceInstanceInfo `protobuf:"bytes,4,opt,name=instance_info,json=instanceInfo,proto3" json:"instance_info,omitempty"`
}

func (x *Attestation) Reset() {
	*x = Attestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attestation) ProtoMessage() {}

func (x *Attestation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attestation.ProtoReflect.Descriptor instead.
func (*Attestation) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{5}
}

func (x *Attestation) GetAkPub() []byte {
	if x != nil {
		return x.AkPub
	}
	return nil
}

func (x *Attestation) GetQuotes() []*Quote {
	if x != nil {
		return x.Quotes
	}
	return nil
}

func (x *Attestation) GetEventLog() []byte {
	if x != nil {
		return x.EventLog
	}
	return nil
}

func (x *Attestation) GetInstanceInfo() *GceInstanceInfo {
	if x != nil {
		return x.InstanceInfo
	}
	return nil
}

type PlatformState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirmwareVersion []byte                    `protobuf:"bytes,1,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	Technology      GceConfidentialTechnology `protobuf:"varint,2,opt,name=technology,proto3,enum=GceConfidentialTechnology" json:"technology,omitempty"`
}

func (x *PlatformState) Reset() {
	*x = PlatformState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformState) ProtoMessage() {}

func (x *PlatformState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformState.ProtoReflect.Descriptor instead.
func (*PlatformState) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{6}
}

func (x *PlatformState) GetFirmwareVersion() []byte {
	if x != nil {
		return x.FirmwareVersion
	}
	return nil
}

func (x *PlatformState) GetTechnology() GceConfidentialTechnology {
	if x != nil {
		return x.Technology
	}
	return GceConfidentialTechnology_NONE
}

type Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Der []byte `protobuf:"bytes,1,opt,name=der,proto3" json:"der,omitempty"`
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{7}
}

func (x *Certificate) GetDer() []byte {
	if x != nil {
		return x.Der
	}
	return nil
}

// A Secure Boot database containing lists of hashes and certificates,
// as defined by section 32.4.1 Signature Database in the UEFI spec.
type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certs  []*Certificate `protobuf:"bytes,1,rep,name=certs,proto3" json:"certs,omitempty"`
	Hashes [][]byte       `protobuf:"bytes,2,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{8}
}

func (x *Database) GetCerts() []*Certificate {
	if x != nil {
		return x.Certs
	}
	return nil
}

func (x *Database) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type SecureBootState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool      `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Db      *Database `protobuf:"bytes,2,opt,name=db,proto3" json:"db,omitempty"`
	Dbx     *Database `protobuf:"bytes,3,opt,name=dbx,proto3" json:"dbx,omitempty"`
	// Authority events post-separator. Pre-separator authorities
	// are currently not supported.
	Authority *Database `protobuf:"bytes,4,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (x *SecureBootState) Reset() {
	*x = SecureBootState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecureBootState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureBootState) ProtoMessage() {}

func (x *SecureBootState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureBootState.ProtoReflect.Descriptor instead.
func (*SecureBootState) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{9}
}

func (x *SecureBootState) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SecureBootState) GetDb() *Database {
	if x != nil {
		return x.Db
	}
	return nil
}

func (x *SecureBootState) GetDbx() *Database {
	if x != nil {
		return x.Dbx
	}
	return nil
}

func (x *SecureBootState) GetAuthority() *Database {
	if x != nil {
		return x.Authority
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index         uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	UntrustedType uint32 `protobuf:"varint,2,opt,name=untrusted_type,json=untrustedType,proto3" json:"untrusted_type,omitempty"`
	Data          []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Digest        []byte `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{10}
}

func (x *Event) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Event) GetUntrustedType() uint32 {
	if x != nil {
		return x.UntrustedType
	}
	return 0
}

func (x *Event) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type MachineState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform   *PlatformState   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	SecureBoot *SecureBootState `protobuf:"bytes,2,opt,name=secure_boot,json=secureBoot,proto3" json:"secure_boot,omitempty"`
	RawEvents  []*Event         `protobuf:"bytes,3,rep,name=raw_events,json=rawEvents,proto3" json:"raw_events,omitempty"`
}

func (x *MachineState) Reset() {
	*x = MachineState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineState) ProtoMessage() {}

func (x *MachineState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineState.ProtoReflect.Descriptor instead.
func (*MachineState) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{11}
}

func (x *MachineState) GetPlatform() *PlatformState {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *MachineState) GetSecureBoot() *SecureBootState {
	if x != nil {
		return x.SecureBoot
	}
	return nil
}

func (x *MachineState) GetRawEvents() []*Event {
	if x != nil {
		return x.RawEvents
	}
	return nil
}

type PlatformPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedFirmwareVersions [][]byte                  `protobuf:"bytes,1,rep,name=allowed_firmware_versions,json=allowedFirmwareVersions,proto3" json:"allowed_firmware_versions,omitempty"`
	MinimumTechnology       GceConfidentialTechnology `protobuf:"varint,2,opt,name=minimum_technology,json=minimumTechnology,proto3,enum=GceConfidentialTechnology" json:"minimum_technology,omitempty"`
}

func (x *PlatformPolicy) Reset() {
	*x = PlatformPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformPolicy) ProtoMessage() {}

func (x *PlatformPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformPolicy.ProtoReflect.Descriptor instead.
func (*PlatformPolicy) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{12}
}

func (x *PlatformPolicy) GetAllowedFirmwareVersions() [][]byte {
	if x != nil {
		return x.AllowedFirmwareVersions
	}
	return nil
}

func (x *PlatformPolicy) GetMinimumTechnology() GceConfidentialTechnology {
	if x != nil {
		return x.MinimumTechnology
	}
	return GceConfidentialTechnology_NONE
}

type SecureBootPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permitted            *Database      `protobuf:"bytes,1,opt,name=permitted,proto3" json:"permitted,omitempty"`
	Forbidden            *Database      `protobuf:"bytes,2,opt,name=forbidden,proto3" json:"forbidden,omitempty"`
	PermittedAuthorities []*Certificate `protobuf:"bytes,3,rep,name=permitted_authorities,json=permittedAuthorities,proto3" json:"permitted_authorities,omitempty"`
}

func (x *SecureBootPolicy) Reset() {
	*x = SecureBootPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecureBootPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureBootPolicy) ProtoMessage() {}

func (x *SecureBootPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureBootPolicy.ProtoReflect.Descriptor instead.
func (*SecureBootPolicy) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{13}
}

func (x *SecureBootPolicy) GetPermitted() *Database {
	if x != nil {
		return x.Permitted
	}
	return nil
}

func (x *SecureBootPolicy) GetForbidden() *Database {
	if x != nil {
		return x.Forbidden
	}
	return nil
}

func (x *SecureBootPolicy) GetPermittedAuthorities() []*Certificate {
	if x != nil {
		return x.PermittedAuthorities
	}
	return nil
}

type AttestationPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform   *PlatformPolicy   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	SecureBoot *SecureBootPolicy `protobuf:"bytes,2,opt,name=secure_boot,json=secureBoot,proto3" json:"secure_boot,omitempty"`
}

func (x *AttestationPolicy) Reset() {
	*x = AttestationPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tpm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationPolicy) ProtoMessage() {}

func (x *AttestationPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tpm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationPolicy.ProtoReflect.Descriptor instead.
func (*AttestationPolicy) Descriptor() ([]byte, []int) {
	return file_proto_tpm_proto_rawDescGZIP(), []int{14}
}

func (x *AttestationPolicy) GetPlatform() *PlatformPolicy {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *AttestationPolicy) GetSecureBoot() *SecureBootPolicy {
	if x != nil {
		return x.SecureBoot
	}
	return nil
}

var File_proto_tpm_proto protoreflect.FileDescriptor

var file_proto_tpm_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x70, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x69, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x70, 0x72, 0x69, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x70, 0x75, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x70, 0x63, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x41, 0x6c, 0x67, 0x6f, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x03, 0x73, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x73, 0x72, 0x6b, 0x12, 0x2c, 0x0a, 0x0e, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x63, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x50, 0x63, 0x72, 0x73, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x50, 0x63, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42,
	0x6c, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x53, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x72, 0x65, 0x61, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x63, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x63, 0x72, 0x73, 0x52, 0x04,
	0x70, 0x63, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x61, 0x77, 0x53, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x04,
	0x70, 0x63, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x63, 0x72,
	0x73, 0x52, 0x04, 0x70, 0x63, 0x72, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x04, 0x50, 0x63, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x23, 0x0a, 0x04, 0x70, 0x63, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x50, 0x63, 0x72, 0x73, 0x2e, 0x50, 0x63, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x70, 0x63, 0x72, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x50, 0x63, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x01,
	0x0a, 0x0f, 0x47, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6b, 0x5f, 0x70, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x1e, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x35, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47,
	0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x0d,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x47,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x22, 0x1f, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x64, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x63, 0x65, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x0f, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x02, 0x64,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x02, 0x64, 0x62, 0x12, 0x1b, 0x0a, 0x03, 0x64, 0x62, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x03,
	0x64, 0x62, 0x78, 0x12, 0x27, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x70, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x75,
	0x6e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x94,
	0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x31, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x25,
	0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x72, 0x61, 0x77, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x17, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f,
	0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x47, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x11, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22,
	0xa7, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x09, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x09, 0x66, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x11, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2b,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x32, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x2a,
	0x32, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x41, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x43,
	0x43, 0x10, 0x23, 0x2a, 0x32, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f, 0x12,
	0x10, 0x0a, 0x0c, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x48, 0x41, 0x31, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x0b, 0x2a, 0x42, 0x0a, 0x19, 0x47, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x4d, 0x44, 0x5f, 0x53, 0x45, 0x56, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41,
	0x4d, 0x44, 0x5f, 0x53, 0x45, 0x56, 0x5f, 0x45, 0x53, 0x10, 0x02, 0x42, 0x26, 0x5a, 0x24, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x70, 0x6d, 0x2d, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tpm_proto_rawDescOnce sync.Once
	file_proto_tpm_proto_rawDescData = file_proto_tpm_proto_rawDesc
)

func file_proto_tpm_proto_rawDescGZIP() []byte {
	file_proto_tpm_proto_rawDescOnce.Do(func() {
		file_proto_tpm_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tpm_proto_rawDescData)
	})
	return file_proto_tpm_proto_rawDescData
}

var file_proto_tpm_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_tpm_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_tpm_proto_goTypes = []interface{}{
	(ObjectType)(0),                // 0: ObjectType
	(HashAlgo)(0),                  // 1: HashAlgo
	(GceConfidentialTechnology)(0), // 2: GceConfidentialTechnology
	(*SealedBytes)(nil),            // 3: SealedBytes
	(*ImportBlob)(nil),             // 4: ImportBlob
	(*Quote)(nil),                  // 5: Quote
	(*Pcrs)(nil),                   // 6: Pcrs
	(*GceInstanceInfo)(nil),        // 7: GceInstanceInfo
	(*Attestation)(nil),            // 8: Attestation
	(*PlatformState)(nil),          // 9: PlatformState
	(*Certificate)(nil),            // 10: Certificate
	(*Database)(nil),               // 11: Database
	(*SecureBootState)(nil),        // 12: SecureBootState
	(*Event)(nil),                  // 13: Event
	(*MachineState)(nil),           // 14: MachineState
	(*PlatformPolicy)(nil),         // 15: PlatformPolicy
	(*SecureBootPolicy)(nil),       // 16: SecureBootPolicy
	(*AttestationPolicy)(nil),      // 17: AttestationPolicy
	nil,                            // 18: Pcrs.PcrsEntry
}
var file_proto_tpm_proto_depIdxs = []int32{
	1,  // 0: SealedBytes.hash:type_name -> HashAlgo
	0,  // 1: SealedBytes.srk:type_name -> ObjectType
	6,  // 2: SealedBytes.certified_pcrs:type_name -> Pcrs
	6,  // 3: ImportBlob.pcrs:type_name -> Pcrs
	6,  // 4: Quote.pcrs:type_name -> Pcrs
	1,  // 5: Pcrs.hash:type_name -> HashAlgo
	18, // 6: Pcrs.pcrs:type_name -> Pcrs.PcrsEntry
	5,  // 7: Attestation.quotes:type_name -> Quote
	7,  // 8: Attestation.instance_info:type_name -> GceInstanceInfo
	2,  // 9: PlatformState.technology:type_name -> GceConfidentialTechnology
	10, // 10: Database.certs:type_name -> Certificate
	11, // 11: SecureBootState.db:type_name -> Database
	11, // 12: SecureBootState.dbx:type_name -> Database
	11, // 13: SecureBootState.authority:type_name -> Database
	9,  // 14: MachineState.platform:type_name -> PlatformState
	12, // 15: MachineState.secure_boot:type_name -> SecureBootState
	13, // 16: MachineState.raw_events:type_name -> Event
	2,  // 17: PlatformPolicy.minimum_technology:type_name -> GceConfidentialTechnology
	11, // 18: SecureBootPolicy.permitted:type_name -> Database
	11, // 19: SecureBootPolicy.forbidden:type_name -> Database
	10, // 20: SecureBootPolicy.permitted_authorities:type_name -> Certificate
	15, // 21: AttestationPolicy.platform:type_name -> PlatformPolicy
	16, // 22: AttestationPolicy.secure_boot:type_name -> SecureBootPolicy
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_tpm_proto_init() }
func file_proto_tpm_proto_init() {
	if File_proto_tpm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tpm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SealedBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pcrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GceInstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecureBootState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecureBootPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tpm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tpm_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_tpm_proto_goTypes,
		DependencyIndexes: file_proto_tpm_proto_depIdxs,
		EnumInfos:         file_proto_tpm_proto_enumTypes,
		MessageInfos:      file_proto_tpm_proto_msgTypes,
	}.Build()
	File_proto_tpm_proto = out.File
	file_proto_tpm_proto_rawDesc = nil
	file_proto_tpm_proto_goTypes = nil
	file_proto_tpm_proto_depIdxs = nil
}
